{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-02-15T02:26:20.047Z",
    "end": "2023-02-15T02:26:50.217Z",
    "duration": 30170,
    "testsRegistered": 18,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 17,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "9f38bdd9-afd4-4a04-9a44-3297332373e3",
      "title": "",
      "fullFile": "cypress/e2e/project.cy.js",
      "file": "cypress/e2e/project.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c026828-425a-48f4-b1a1-453876beb289",
          "title": "Shopping Cart Project",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a5fd72b1-0851-4767-b3b2-4d03ed41b778",
              "title": "1 - Desenvolva testes para atingir cobertura de 50% das funções e linhas do arquivo fetchFunctions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica a cobertura de testes unitários",
                  "fullTitle": "Shopping Cart Project 1 - Desenvolva testes para atingir cobertura de 50% das funções e linhas do arquivo fetchFunctions Verifica a cobertura de testes unitários",
                  "timedOut": null,
                  "duration": 30079,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.getCoverage().its('fetchFunctions.functions.pct', {\n  timeout: 0\n}).should('be.gte', 50.00);\ncy.getCoverage().its('fetchFunctions.lines.pct', {\n  timeout: 0\n}).should('be.gte', 50.00);",
                  "err": {
                    "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:5173/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: ESOCKETTIMEDOUT\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Shopping Cart Project`",
                    "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:5173/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: ESOCKETTIMEDOUT\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Shopping Cart Project`\n    at http://localhost:41455/__cypress/runner/cypress_runner.js:152359:82\n    at visitFailedByErr (http://localhost:41455/__cypress/runner/cypress_runner.js:151661:12)\n    at http://localhost:41455/__cypress/runner/cypress_runner.js:152358:11\n    at tryCatcher (http://localhost:41455/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41455/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:41455/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:41455/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:41455/__cypress/runner/cypress_runner.js:9431:18)\n    at _drainQueueStep (http://localhost:41455/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://localhost:41455/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41455/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://localhost:41455/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:41455/__cypress/tests?p=cypress/e2e/project.cy.js:227:8)\n\nFrom Node.js Internals:\n  Error: ESOCKETTIMEDOUT\n      at ClientRequest.<anonymous> (/home/guilherme/.cache/Cypress/10.6.0/Cypress/resources/app/node_modules/@cypress/request/request.js:808:19)\n      at Object.onceWrapper (node:events:645:28)\n      at ClientRequest.emit (node:events:526:28)\n      at ClientRequest.emit (node:domain:475:12)\n      at Socket.emitRequestTimeout (node:_http_client:758:9)\n      at Object.onceWrapper (node:events:645:28)\n      at Socket.emit (node:events:538:35)\n      at Socket.emit (node:domain:475:12)\n      at Socket._onTimeout (node:net:501:8)\n      at listOnTimeout (node:internal/timers:559:17)\n      at processTimers (node:internal/timers:502:7)\n  ",
                    "diff": null
                  },
                  "uuid": "5bc9879e-2ed6-48ca-b6a7-02010017da7a",
                  "parentUUID": "a5fd72b1-0851-4767-b3b2-4d03ed41b778",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "5bc9879e-2ed6-48ca-b6a7-02010017da7a"
              ],
              "pending": [],
              "skipped": [],
              "duration": 30079,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d80e5322-4e26-4552-b3bc-97154a05c1c6",
              "title": "2 - Implemente a função fetchProductsList",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchProductsList retorna um erro quando não é passado nenhum parâmetro",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetchProductsList retorna um erro quando não é passado nenhum parâmetro",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n  await fetchProductsList();\n  throw new Error('A função não retornou um erro');\n} catch (err) {\n  if (err.message === 'A função não retornou um erro') throw err;\n  expect(err.message).to.be.equal('Termo de busca não informado');\n}",
                  "err": {},
                  "uuid": "0f26dd7d-3c32-43a4-a812-9781e9a835fa",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "fetch é chamado com o endpoint correto ao executar fetchProductsList",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetch é chamado com o endpoint correto ao executar fetchProductsList",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProductsList('computador');\nexpect(fetch).to.be.calledWith('https://api.mercadolibre.com/sites/MLB/search?q=computador');",
                  "err": {},
                  "uuid": "d538f9fe-ded5-4404-b90c-34454626163e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "fetchProductsList retorna os results da API",
                  "fullTitle": "Shopping Cart Project 2 - Implemente a função fetchProductsList fetchProductsList retorna os results da API",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(fetchProductsList('computador')).should('be.deep.equal', results);",
                  "err": {},
                  "uuid": "87a000c4-504c-4451-9759-116a2582bbca",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "0f26dd7d-3c32-43a4-a812-9781e9a835fa",
                "d538f9fe-ded5-4404-b90c-34454626163e",
                "87a000c4-504c-4451-9759-116a2582bbca"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b31e6e17-a645-4a33-829c-835ed627806c",
              "title": "3 - Crie uma listagem de produtos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Listagem de produtos",
                  "fullTitle": "Shopping Cart Project 3 - Crie uma listagem de produtos Listagem de produtos",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(PRODUCT_SELECTOR).should('exist').should('have.length', results.length).get(PRODUCT_TITLE).each(($el, index) => {\n  expect($el.text()).to.be.equal(results[index].title);\n});",
                  "err": {},
                  "uuid": "6830b3c3-5e5c-4523-a4b7-f5dbe553a53a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "6830b3c3-5e5c-4523-a4b7-f5dbe553a53a"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cba435d5-3edc-4cb9-b8bf-bb42a45ec114",
              "title": "4 - Adicione um texto de `carregando` durante uma requisição à API",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adicionar um texto de \"carregando\" durante uma requisição à API",
                  "fullTitle": "Shopping Cart Project 4 - Adicione um texto de `carregando` durante uma requisição à API Adicionar um texto de \"carregando\" durante uma requisição à API",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    win.fetch = url => new Promise(resolve => {\n      setTimeout(() => {\n        fetchMock(url).then(resolve);\n      }, 1000);\n    });\n  }\n});\ncy.get(LOADING).should('be.visible').wait(3000);\ncy.get(LOADING).should('not.exist');",
                  "err": {},
                  "uuid": "1b25e8d9-d587-4056-bf4c-e3390725fa88",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "1b25e8d9-d587-4056-bf4c-e3390725fa88"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4073c0d7-3da7-426e-8244-fc9b7a5f5b86",
              "title": "5 - Exiba um texto de `erro` caso a requisição à API falhe",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "O texto não deve ser exibido caso a requisição à API seja bem sucedida",
                  "fullTitle": "Shopping Cart Project 5 - Exiba um texto de `erro` caso a requisição à API falhe O texto não deve ser exibido caso a requisição à API seja bem sucedida",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(ERRO).should('not.exist');",
                  "err": {},
                  "uuid": "f7ccbf1d-c4b8-4b86-93b6-8af94131854f",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Exibir um texto de \"erro\" caso a requisição à API falhe",
                  "fullTitle": "Shopping Cart Project 5 - Exiba um texto de `erro` caso a requisição à API falhe Exibir um texto de \"erro\" caso a requisição à API falhe",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    win.fetch.callsFake(() => Promise.reject(new Error('API is down')));\n  }\n});\ncy.get(ERRO).should('be.visible');",
                  "err": {},
                  "uuid": "37994a0c-aba4-41c4-a318-7c25212ed0e2",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "f7ccbf1d-c4b8-4b86-93b6-8af94131854f",
                "37994a0c-aba4-41c4-a318-7c25212ed0e2"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ea9b14cc-28e1-43b7-ad39-c022a14eda4c",
              "title": "6 - Desenvolva testes para atingir cobertura de 100% das funções e linhas do arquivo fetchFunctions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica a cobertura de testes unitários",
                  "fullTitle": "Shopping Cart Project 6 - Desenvolva testes para atingir cobertura de 100% das funções e linhas do arquivo fetchFunctions Verifica a cobertura de testes unitários",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.getCoverage().its('fetchFunctions.functions.pct', {\n  timeout: 0\n}).should('be.gte', 100.00);\ncy.getCoverage().its('fetchFunctions.lines.pct', {\n  timeout: 0\n}).should('be.gte', 100.00);",
                  "err": {},
                  "uuid": "9bff8260-064a-46b7-b157-a3aa89198111",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "9bff8260-064a-46b7-b157-a3aa89198111"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8726b19e-8195-44c9-83f1-ab4d48cedbf6",
              "title": "7 - Implemente a função `fetchProduct`",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchProduct retorna um erro quando não é passado nenhum parâmetro",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetchProduct retorna um erro quando não é passado nenhum parâmetro",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProduct().then(() => done(new Error('A função não retornou um erro'))).catch(err => {\n  expect(err.message).to.be.equal('ID não informado');\n  done();\n});",
                  "err": {},
                  "uuid": "992941e0-8b08-4cfb-9e6b-d580e8327cd7",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "fetch é chamado com o endpoint correto ao executar fetchProduct",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetch é chamado com o endpoint correto ao executar fetchProduct",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fetchProduct('MLB1405519561');\nexpect(fetch).to.be.calledWith('https://api.mercadolibre.com/items/MLB1405519561');",
                  "err": {},
                  "uuid": "8bb72f92-dbcc-4fe8-ad43-032a2165f9fb",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "fetchProduct retorna os dados do produto",
                  "fullTitle": "Shopping Cart Project 7 - Implemente a função `fetchProduct` fetchProduct retorna os dados do produto",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const expectedResult = results.find(({\n  id\n}) => id === 'MLB1405519561');\ncy.wrap(fetchProduct('MLB1405519561')).should('be.deep.equal', _objectSpread(_objectSpread({}, expectedResult), {}, {\n  pictures\n}));",
                  "err": {},
                  "uuid": "021f2055-c07c-4eae-a62d-7c7a5532a4bd",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "992941e0-8b08-4cfb-9e6b-d580e8327cd7",
                "8bb72f92-dbcc-4fe8-ad43-032a2165f9fb",
                "021f2055-c07c-4eae-a62d-7c7a5532a4bd"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cbd308bc-03b4-4045-a29e-a75dc2fac0e9",
              "title": "8 - Adicione o produto ao carrinho de compras",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Adicione o produto ao carrinho de compras",
                  "fullTitle": "Shopping Cart Project 8 - Adicione o produto ao carrinho de compras Adicione o produto ao carrinho de compras",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(1000);\naddToCart(36);\ncountCart(1);\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);",
                  "err": {},
                  "uuid": "576b17f4-1a37-4fa6-bf1e-1eef69587402",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "576b17f4-1a37-4fa6-bf1e-1eef69587402"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9bf3ac14-677d-4eff-b173-d779b6463c92",
              "title": "9 - Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
                  "fullTitle": "Shopping Cart Project 9 - Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página Carregue o carrinho de compras através do **LocalStorage** ao iniciar a página",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const first = 36;\nconst last = 29;\naddToCart(first);\ncountCart(1);\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);\naddToCart(last);\ncountCart(2);\ncy.get(CART_PRODUCTS).children().last().should('contain', results[29].title);\ncy.reload();\ncy.get(CART_PRODUCTS).children().first().should('contain', results[36].title);\ncy.get(CART_PRODUCTS).children().last().should('contain', results[29].title);\ncountCart(2);",
                  "err": {},
                  "uuid": "cc0caad0-19b3-4efe-a32b-05c071c57963",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "cc0caad0-19b3-4efe-a32b-05c071c57963"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ebf3d206-538d-48d1-b3f5-e58e3fd7e475",
              "title": "10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
                  "fullTitle": "Shopping Cart Project 10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona Calcule o valor total dos itens do carrinho de compras de forma assíncrona",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "addToCart(5);\ncheckPrice(results, [5]);\naddToCart(42);\ncheckPrice(results, [5, 42]);\naddToCart(36);\ncheckPrice(results, [5, 42, 36]);\naddToCart(15);\ncheckPrice(results, [5, 42, 36, 15]);\ncy.get(CART_PRODUCTS).children().eq(1).click();\ncheckPrice(results, [5, 36, 15]);",
                  "err": {},
                  "uuid": "8f0b3ccf-de51-4ada-b3ae-c47736eb0833",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Ao atualizar a página, o carrinho deve continuar o mesmo",
                  "fullTitle": "Shopping Cart Project 10 - Calcule o valor total dos itens do carrinho de compras de forma assíncrona Ao atualizar a página, o carrinho deve continuar o mesmo",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "addToCart(15);\ncheckPrice(results, [15]);\naddToCart(45);\ncheckPrice(results, [15, 45]);\ncy.reload();\ncheckPrice(results, [15, 45]);\ncy.get(CART_PRODUCTS).children().first().click();\ncheckPrice(results, [45]);\ncy.reload();\ncheckPrice(results, [45]);",
                  "err": {},
                  "uuid": "d74727db-4e4d-4b89-9290-93de8f47d0db",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "8f0b3ccf-de51-4ada-b3ae-c47736eb0833",
                "d74727db-4e4d-4b89-9290-93de8f47d0db"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "95552dc3-a9ee-412b-b196-eb81513695dd",
              "title": "11 - Implemente a função `getAddress`",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verifica se o endereço é exibido após o CEP ser digitado",
                  "fullTitle": "Shopping Cart Project 11 - Implemente a função `getAddress` Verifica se o endereço é exibido após o CEP ser digitado",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(PROJECT_URL, {\n  onBeforeLoad(win) {\n    cy.spy(win.Promise, 'any');\n  }\n});\ncy.get(CEP_INPUT).type('01001000');\ncy.get(CEP_BUTTON).click();\ncy.get(ADDRESS_TEXT).should('have.text', 'Praça da Sé - Sé - São Paulo - SP');\ncy.window().its('Promise.any').should('be.called');",
                  "err": {},
                  "uuid": "a0e11d77-db1a-43b6-8564-d79063965b84",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Verifica se a mensagem `CEP não encontrado` é exibida caso o CEP não exista",
                  "fullTitle": "Shopping Cart Project 11 - Implemente a função `getAddress` Verifica se a mensagem `CEP não encontrado` é exibida caso o CEP não exista",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get(CEP_INPUT).type('00000000');\ncy.get(CEP_BUTTON).click();\ncy.get(ADDRESS_TEXT).should('have.text', 'CEP não encontrado');",
                  "err": {},
                  "uuid": "c4e3b76a-f36d-48fa-b42a-21d17bafcfba",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "a0e11d77-db1a-43b6-8564-d79063965b84",
                "c4e3b76a-f36d-48fa-b42a-21d17bafcfba"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}